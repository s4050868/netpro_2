import java.io.IOException; 
import java.net.URL; 
import java.net.URLConnection; 
import java.util.Iterator; 
import java.util.List; 
import java.util.Map; 
import java.util.Set; 
import java.util.Stack; 
import java.util.logging.Level; 
import java.util.logging.Logger; 
 
 public class assignment2 extends javax.swing.JFrame{ 
 
     Stack urlStack1 = new Stack(); 
     Stack urlStack2 = new Stack(); 
      
     public assignment2() { 
         initComponents(); 
     } 
 
     /** 
      * This method is called from within the constructor to initialize the form. 
      * WARNING: Do NOT modify this code. The content of this method is always 
      * regenerated by the Form Editor. 
      */ 
     @SuppressWarnings("unchecked") 
     // <editor-fold defaultstate="collapsed" desc="Generated Code">         
                  
     private void initComponents() { 
 
         URL1 = new javax.swing.JTextField(); 
         URL2 = new javax.swing.JTextField(); 
         jScrollPane2 = new javax.swing.JScrollPane(); 
         EditorPane1 = new javax.swing.JEditorPane(); 
         jScrollPane3 = new javax.swing.JScrollPane(); 
         EditorPane2 = new javax.swing.JEditorPane(); 
         //BackButton = new javax.swing.JButton(); 
         GoButton = new javax.swing.JButton(); 
         UR = new javax.swing.JLabel(); 
         jLabel1 = new javax.swing.JLabel(); 
         jScrollPane5 = new javax.swing.JScrollPane(); 
         jTextArea1 = new javax.swing.JTextArea(); 
         jScrollPane6 = new javax.swing.JScrollPane(); 
         jTextArea2 = new javax.swing.JTextArea(); 
 
         setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); 
         setTitle("Songpon Chamnanchon s4050868@kmitl.ac.th - Java Web Browser (Network Programming Class Assignment)"); 
         setResizable(false); 
 
         jScrollPane2.setViewportView(EditorPane1); 
         jScrollPane3.setViewportView(EditorPane2); 
 
         GoButton.setText("Get page"); 
         GoButton.addActionListener(new java.awt.event.ActionListener() { 
             public void actionPerformed(java.awt.event.ActionEvent evt) { 
                 GoButtonActionPerformed(evt); 
             } 
         }); 
 
         UR.setText("URL1 :"); 
         jLabel1.setText("URL2 :"); 
         jTextArea1.setColumns(20); 
         jTextArea1.setRows(5); 
         jScrollPane5.setViewportView(jTextArea1); 
         jTextArea2.setColumns(20); 
         jTextArea2.setRows(5); 
         jScrollPane6.setViewportView(jTextArea2); 
 
         javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); 
         getContentPane().setLayout(layout); 
         layout.setHorizontalGroup( 
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
             .addGroup(layout.createSequentialGroup() 
                 .addContainerGap() 
                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
                     .addGroup(layout.createSequentialGroup() 
                         .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING) 
                             .addGroup(layout.createSequentialGroup() 
                                 .addComponent(UR) 
                                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE) 
                                 .addComponent(URL1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))) 
                         .addGap(10, 10, 10) 
                         .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false) 
                             .addGroup(layout.createSequentialGroup() 
                                 .addGap(0, 0, 0)
                                 .addComponent(GoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE) 
                             .addGap(400, 400, 400)) 
                             .addGroup(layout.createSequentialGroup() 
                                 .addComponent(jLabel1) 
                                 .addGap(10, 10, 10) 
                                 .addComponent(URL2)))) 
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup() 
                             
                         .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false) 
                             .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE) 
                             .addComponent(jScrollPane5)) 
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) 
                         .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false) 
                             .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE) 
                             .addComponent(jScrollPane6)))) 
                 .addContainerGap()) 
         ); 


         layout.setVerticalGroup( 
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
             .addGroup(layout.createSequentialGroup() 
                 .addContainerGap() 
                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                     .addComponent(URL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) 
                     .addComponent(URL2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) 
                     .addComponent(UR) 
                     .addComponent(jLabel1)) 
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) 
                     .addComponent(GoButton)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) 
                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false) 
                     .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE) 
                     .addComponent(jScrollPane3)) 
                 .addGap(10, 10, 10) 
                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
                     .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE) 
                     .addComponent(jScrollPane6)) 
                 .addContainerGap()) 
         ); 
 
 
         pack(); 
     }                      
 
     private String getHeader(String url1,boolean flag){ 
         try { 
             URL url = new URL(url1+":80"); 
             URLConnection conn = url.openConnection(); 
              
             Map<String, List<String>> headerFields = conn.getHeaderFields(); 
              
             Set<String> headerFieldsSet = headerFields.keySet(); 
             Iterator<String> hearerFieldsIter = headerFieldsSet.iterator(); 
              
             while (hearerFieldsIter.hasNext()) { 
                  
                 String headerFieldKey = hearerFieldsIter.next(); 
                 List<String> headerFieldValue = headerFields.get(headerFieldKey); 
                  
                 StringBuilder sb = new StringBuilder(); 
                 for (String value : headerFieldValue) { 
                     sb.append(value); 
                     sb.append(""); 
                 } 
                 if (flag) 
                 jTextArea1.append(headerFieldKey + "=" + sb.toString()+"\n"); 
                 else 
                 jTextArea2.append(headerFieldKey + "=" + sb.toString()+"\n"); 
                  
             } 
              
         } catch (IOException ex) { 
             Logger.getLogger(assignment2.class.getName()).log(Level.SEVERE, null, ex); 
         } 
         return null; 
     } 
      
     private void GoButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
         String newUrl = checkLink(URL1.getText()); 
         URL1.setText(newUrl); 
         Thread A = new Thread(new Runnable(){ 
             @Override 
             public void run() { 
                 try { 
                 jTextArea1.setText("Thread 1 : \n"); 
                 getHeader(URL1.getText(),true); 
                 urlStack1.push(URL1.getText()); 
                 jTextArea1.append("\nLoad Page"+URL1.getText()); 
                 EditorPane1.setPage(URL1.getText()); 
                 jTextArea1.append("\nFinished get Page"+URL1.getText()); 
                 } catch (IOException ex) { 
                 Logger.getLogger(assignment2.class.getName()).log(Level.SEVERE, null, ex); 
                 } 
             } 
         }); 
         newUrl = checkLink(URL2.getText()); 
         URL2.setText(newUrl); 
         Thread B = new Thread(new Runnable(){ 
             @Override 
             public void run() { 
                 try { 
                 jTextArea2.setText("Thread 2 : \n"); 
                 getHeader(URL2.getText(),false); 
                 urlStack2.push(URL2.getText()); 
                 jTextArea2.append("\nLoad Page"+URL2.getText()); 
                 EditorPane2.setPage(URL2.getText()); 
                 jTextArea2.append("\nFinished get Page"+URL2.getText()); 
                 } catch (IOException ex) { 
                 Logger.getLogger(assignment2.class.getName()).log(Level.SEVERE, null, ex); 
                 } 
             } 
         }); 
         A.start(); 
         B.start(); 
     }                                         
 
     private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
         Thread A = new Thread(new Runnable(){ 
             @Override 
             public void run() { 
                 try { 
                 jTextArea1.setText("Thread Back 1 : \n"); 
                 urlStack1.pop(); 
                 String url = urlStack1.peek().toString(); 
                 getHeader(url,true); 
                 URL1.setText(url); 
                 jTextArea1.append("\nLoad Page"+URL1.getText()); 
                 EditorPane1.setPage(URL1.getText()); 
                 jTextArea1.append("\nFinished get Page"+URL1.getText()); 
                 } catch (IOException ex) { 
                 Logger.getLogger(assignment2.class.getName()).log(Level.SEVERE, null, ex); 
                 } 
             } 
         }); 
         Thread B = new Thread(new Runnable(){ 
             @Override 
             public void run() { 
                 try { 
                 jTextArea2.setText("Thread Back 2 : \n"); 
                 urlStack2.pop(); 
                 String url = urlStack2.peek().toString(); 
                 getHeader(url,false); 
                 URL2.setText(url); 
                 jTextArea2.append("\nLoad Page"+URL2.getText()); 
                 EditorPane2.setPage(URL2.getText()); 
                 jTextArea2.append("\nFinished get Page"+URL2.getText()); 
                 } catch (IOException ex) { 
                 Logger.getLogger(assignment2.class.getName()).log(Level.SEVERE, null, ex); 
                 } 
             } 
         }); 
         A.start(); 
         B.start(); 
     }                                           
 
     private String checkLink(String checkLink) { 
 	if(!(checkLink.toLowerCase().startsWith("http://"))&&!(checkLink.toLowerCase().startsWith("https://"))) 
 	checkLink = "http://"+checkLink; 
 	return checkLink; 
     } 
      
     /** 
      * @param args the command line arguments 
      */ 
     
     public static void main(String args[]) { 
         try { 
             for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) { 
                 if ("Nimbus".equals(info.getName())) { 
                     javax.swing.UIManager.setLookAndFeel(info.getClassName()); 
                     break; 
                 } 
             } 
         } catch (ClassNotFoundException ex) { 
             java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
         } catch (InstantiationException ex) { 
             java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
         } catch (IllegalAccessException ex) { 
             java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
         } catch (javax.swing.UnsupportedLookAndFeelException ex) { 
             java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
         } 
         //</editor-fold> 
 
         /* Create and display the form */ 
         java.awt.EventQueue.invokeLater(new Runnable() { 
             public void run() { 
                 new assignment2().setVisible(true); 
             } 
         }); 
     } 

     // Variables declaration - do not modify                      
     private javax.swing.JButton BackButton; 
     private javax.swing.JEditorPane EditorPane1; 
     private javax.swing.JEditorPane EditorPane2; 
     private javax.swing.JButton GoButton; 
     private javax.swing.JLabel UR; 
     private javax.swing.JTextField URL1; 
     private javax.swing.JTextField URL2; 
     private javax.swing.JLabel jLabel1; 
     private javax.swing.JScrollPane jScrollPane2; 
     private javax.swing.JScrollPane jScrollPane3; 
     private javax.swing.JScrollPane jScrollPane5; 
     private javax.swing.JScrollPane jScrollPane6; 
     private javax.swing.JTextArea jTextArea1; 
     private javax.swing.JTextArea jTextArea2; 
    // End of variables declaration                    
 }
